name: Windows

on:
  push:
    branches:
      - feature/ci

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        choco install visualstudio2019buildtools -y
        choco install visualstudio2019-workload-vctools -y
        choco install openssl.light -y
        choco install inno-setup -y
        choco install qt --version=${{ matrix.qt_ver }} --params="'/Desktop/${{ matrix.qt_target }}/${{ matrix.qt_arch }}'" -y
    - name: Build
      run: |
        qmake CONFIG+=release
        nmake
        windeployqt --no-translations --no-webkit2 --no-angle --no-opengl-sw --no-system-d3d-compiler --no-gif --no-ico --no-bmp --no-jpg --no-icns omniedge.exe
    - name: Package
      run: |
        iscc /Oomniedge_installer /F"omniedge_setup" /Q "build-package\omniedge_withTAP_V02_bat.iss"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this release:
          - Add feature A
          - Fix bug B
        draft: false
        prerelease: false
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./omniedge_installer/omniedge_setup.exe
        asset_name: omniedge_setup.exe
        asset_content_type: application/octet-stream
    strategy:
      matrix:
        qt_ver: [5.12.12]
        qt_target: [desktop]
        qt_arch: [win32_msvc2017]
